type User {
    userId: ID!
    name: String!
    email: String!
    username: String!
    photo: String
}

type Content {
    contentId: ID!
    name: String
    description: String
    service:Service
    user: User
}

type Service {
    serviceId: ID!
    price: Float!
    name: String!
    description: String
    serviceCategory: String!
    latitude: Float
    longitude: Float
    departureDate: String
    arrivalDate: String
    transportType: String
    content: Content
    country: String
    city: String
}

type Payment {
    paymentId: ID!
    totalAmount: Float!
    userId: ID!
    paid: Boolean!
    services: [Service]
}


type Query {
    allServices: [Service]
    serviceById(serviceId: ID!): Service
    servicesByCategory(serviceCategory: String!): [Service]
    servicesByWord(word: String!): [Service]

    allContents: [Content]
    contentById(contentId: ID!): Content

    findAllByUser: [Payment]
    getShoppingCart: Payment
}

type Mutation {
    pay: String
    addToShoppingCart(serviceId: ID!): String
}

